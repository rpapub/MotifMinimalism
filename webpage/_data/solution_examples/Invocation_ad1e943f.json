{
  "schema_version": "v0.0.4",
  "solution_examples": {
    "ab9432af-f7ee-488d-aa93-08ddc3ac53d1": {
      "created_at": "",
      "name": "Versioning the Invocation",
      "educational": {
        "estimated_time_minutes": 0,
        "goals": [],
        "level": "Intermediate",
        "prerequisites": []
      },
      "publishing": {
        "audience": [
          "Developer"
        ],
        "authors": [
          "Christian Prior-Mamulyan"
        ],
        "citation_ids": [
          "mcve_explainer_page",
          "motifminimalism_repo"
        ],
        "created_at": "2025-07-19T12:45:00Z",
        "last_updated": "",
        "render": {
          "layout": "",
          "permalink": "/invocation/versioning-the-invocation/"
        },
        "slug": "",
        "status": "",
        "summary": "This example demonstrates how a job is invoked with input arguments, using a version parameter to prepare for future changes. The version is passed either as a simple string or embedded within a JSON object. Default values defined in Studio Web are respected by the UiPath Orchestrator at runtime.",
        "tags": [],
        "title": "",
        "visibility": ""
      },
      "runtime_construct": {
        "artifact_version": "",
        "category": "",
        "compatibility": "",
        "design_tool_versions": [],
        "edge_cases": [],
        "execution_phase": "",
        "inputs": "",
        "observability": "",
        "outputs": "",
        "platform_constraints": "",
        "runtime_versions": [],
        "source_commit": "",
        "tags": [],
        "tech_stack": []
      },
      "solution": {
        "solution_id": "ab9432af-f7ee-488d-aa93-08ddc3ac53d1",
        "authors": [
          "Christian Prior-Mamulyan"
        ],
        "license_id": "CC-BY-4.0",
        "description": "Shows how a job takes input arguments and makes decisions based on a version argument.",
        "doc_version": "",
        "download_urls": [
          "/webpage/download/Invocation_ad1e943f_v0.1.21.uis",
          "/webpage/download/Invocation_ad1e943f_v0.1.23.uis"
        ],
        "name": "Trigger Input Binding",
        "projects": [
          {
            "type": "Process",
            "project_relative_path": "MotifMinimalism/project.uiproj",
            "id": "02a08226-6c4b-461e-980b-cdb86636490d",
            "name": "MotifMinimalism",
            "description": "This RPA project acts as a diagnostic utility to interact with and inspect JSON payloads exchanged with the Maestro BPMN engine. It helps trace, validate, and log process data (e.g., \"ping/pong\" objects) by exposing internal structure via recursive logging and safe fallback handling, enabling faster debugging and schema exploration.",
            "images": [],
            "observations": []
          },
          {
            "type": "ProcessOrchestration",
            "project_relative_path": "VersionString/project.uiproj",
            "id": "e7b5240f-c1db-4e45-ad39-3f31ed4efaec",
            "name": "VersionString",
            "description": "This example demonstrates how to pass inputs into the trigger. It covers three entrypoints: passing a simple string, passing a complex JSON object, and passing both together. The goal is to test whether such a code structure executes correctly throughout the platform.",
            "images": [
              "capture_001_18072025_232409.png",
              "capture_003_18072025_232452.png",
              "capture_004_18072025_232456.png"
            ],
            "input_schema": {
              "type": "object",
              "properties": {
                "Version": {
                  "type": "string",
                  "title": "Version",
                  "default": "v1"
                }
              },
              "required": []
            },
            "input_data": {
              "Version": "v1"
            },
            "output_schema": {
              "type": "object",
              "properties": {}
            },
            "output_data_expected": {},
            "observations": []
          },
          {
            "type": "ProcessOrchestration",
            "project_relative_path": "MultipleEntrypoints/project.uiproj",
            "id": "01147932-e6f2-4582-ad41-dba06920c327",
            "name": "MultipleEntrypoints",
            "description": "This example demonstrates how to pass inputs into the trigger. It covers three entrypoints: passing a simple string, passing a complex JSON object, and passing both together. The goal is to test whether such a code structure executes correctly throughout the platform.",
            "images": [
              "capture_001_18072025_232409.png",
              "capture_003_18072025_232452.png",
              "capture_004_18072025_232456.png",
              "capture_005_18072025_232522.png",
              "capture_006_18072025_232531.png"
            ],
            "input_schema": {
              "type": "object",
              "properties": {
                "Version": {
                  "type": "string",
                  "title": "Version",
                  "default": "v1"
                }
              },
              "required": []
            },
            "output_schema": {
              "type": "object",
              "properties": {}
            },
            "observations": []
          },
          {
            "type": "ProcessOrchestration",
            "project_relative_path": "RequestJObject/project.uiproj",
            "id": "635b364c-eb84-48e4-a065-519243f050bc",
            "name": "RequestJObject",
            "description": "This example demonstrates how to pass a complex JSON object into the trigger. It illustrates how structured input is received and processed during runtime.",
            "images": [
              "capture_005_18072025_232522.png"
            ],
            "input_schema": {
              "type": "object",
              "properties": {
                "Request": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "correlationid": {
                      "type": "string"
                    },
                    "requestid": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "string"
                    },
                    "logContext": {
                      "type": "object"
                    },
                    "payload": {
                      "type": "object"
                    }
                  }
                }
              },
              "required": []
            },
            "output_schema": {
              "type": "object",
              "properties": {}
            },
            "observations": []
          },
          {
            "type": "ProcessOrchestration",
            "project_relative_path": "VersionAndRequestJObject/project.uiproj",
            "id": "07685722-bcba-4e9b-a91e-97809659ba84",
            "name": "VersionAndRequestJObject",
            "description": "This example demonstrates how to pass both a simple string and a complex JSON object into the trigger. It highlights how multiple input types with differing complexity are handled in a single invocation.",
            "images": [
              "capture_006_18072025_232531.png"
            ],
            "input_schema": {
              "type": "object",
              "properties": {
                "Version": {
                  "type": "string",
                  "title": "Version",
                  "default": "vEmHQjakv"
                },
                "Request": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "correlationid": {
                      "type": "string"
                    },
                    "requestid": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "string"
                    },
                    "logContext": {
                      "type": "object"
                    },
                    "payload": {
                      "type": "object"
                    }
                  }
                }
              },
              "required": []
            },
            "output_schema": {
              "type": "object",
              "properties": {}
            },
            "observations": []
          }
        ],
        "studio_min_version": "",
        "created_at": "2025-07-19T12:45:00Z",
        "images": [
          "capture_001_18072025_232409.png",
          "capture_003_18072025_232452.png",
          "capture_004_18072025_232456.png",
          "capture_005_18072025_232522.png",
          "capture_006_18072025_232531.png"
        ],
        "designtime_environment": {
          "account_type": "Community",
          "platform_name": "UiPath Automation Cloud",
          "design_tools": [
            {
              "name": "UiPath Studio Web",
              "version": "9e669382d"
            },
            {
              "name": "Orchestrator",
              "version": "2024.10.0-s171"
            }
          ]
        }
      },
      "deployments": [
        {
          "id": "",
          "timestamp": "2025-07-19T12:45:00Z",
          "runtime_environment": {
            "slug": "cloud-com-dev",
            "name": "Automation Cloud Community",
            "platform": "AutomationCloud",
            "license": "COMMUNITY",
            "stage": "Research",
            "notes": "",
            "tags": [
              "Orchestrator 2024.10.0-s172.9791"
            ]
          },
          "observations": [
            {
              "status": "error",
              "timestamp": "2025-07-19T12:45:00Z",
              "context": "commodo Lorem sit laboris",
              "findings": [
                {
                  "message": "Multiple entrypoints visible in the job but selected entrypoint not always executed.",
                  "severity": "low"
                }
              ]
            }
          ]
        }
      ]
    }
  }
}